version: '3'

services:
  article_service:
    build: article_service/
    container_name: article-service-container
    ports:
      - "8002:8002"
    image: article_service_image
    environment:
      - DJANGO_SETTINGS_MODULE=article_service.settings
      - DJANGO_DEBUG=True
      - POSTGRES_HOST=article_db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=article_db
      - POSTGRES_USER=article_user
      - POSTGRES_PASSWORD=article_password
    volumes:
      - ./article_service/:/app 
    depends_on:
      - article_db
    networks:
      - rss_app_network

  summarizer_service:
    build: summarizer_service/
    container_name: summarizer-service-container
    ports:
      - "8000:8000"
    image: summarizer_service_image
    volumes:
      - ./summarizer_service/:/app 
    environment:
      - DJANGO_SETTINGS_MODULE=summarizer_service.settings
      - DJANGO_DEBUG=True
    networks:
      - rss_app_network

  crawler_service:
    build: crawler_service/
    container_name: crawler-service-container
    ports:
      - "8004:8004"
    image: crawler_service_image
    volumes:
      - ./crawler_service/:/app 
    environment:
      - DJANGO_SETTINGS_MODULE=crawler_service.settings
      - DJANGO_DEBUG=True
    networks:
      - rss_app_network

  # article_db:
  #   container_name: article-db-container
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_USER: article_user
  #     POSTGRES_PASSWORD: article_password
  #     POSTGRES_DB: article_db
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - article_pg_data:/var/lib/postgresql/data
  #   networks:
  #     - rss_app_network

  # pgadmin:
  #   container_name: pgadmin4_container
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: root
  #   ports:
  #     - "5060:80"
  #   networks:
  #     - rss_app_network

  article_db:
    container_name: article-db-container
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: article_user
      MONGO_INITDB_ROOT_PASSWORD: article_password
      MONGO_INITDB_DATABASE: article_db
    volumes:
      - article_mongo_data:/var/lib/mongodb
    networks:
      - rss_app_network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8101:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: article_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: article_password
      ME_CONFIG_MONGODB_URL: mongodb://article_user:article_password@article_db:27017/
    networks:
      - rss_app_network

  tasks_service:
    build: tasks_service/
    container_name: tasks-service-container
    ports:
      - "8010:8010"
    image: tasks_service_image
    volumes:
      - ./tasks_service/:/app 
    environment:
      - DJANGO_SETTINGS_MODULE=tasks_service.settings
      - DJANGO_DEBUG=True
    networks:
      - rss_app_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - rss_app_network

  celery-worker:
    build: tasks_service/
    command: python3 manage.py celery
    volumes:
      - ./tasks_service/:/app
    depends_on:
      - redis
    networks:
      - rss_app_network

volumes:
  article_mongo_data:
    driver: local

networks:
  rss_app_network:
    driver: bridge